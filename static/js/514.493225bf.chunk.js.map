{"version":3,"file":"static/js/514.493225bf.chunk.js","mappings":"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","sources":["../node_modules/react-zoom-pan-pinch/node_modules/tslib/tslib.es6.js","../node_modules/react-zoom-pan-pinch/src/utils/calculations.utils.ts","../node_modules/react-zoom-pan-pinch/src/utils/callback.utils.ts","../node_modules/react-zoom-pan-pinch/src/core/animations/animations.constants.ts","../node_modules/react-zoom-pan-pinch/src/core/animations/animations.utils.ts","../node_modules/react-zoom-pan-pinch/src/core/bounds/bounds.utils.ts","../node_modules/react-zoom-pan-pinch/src/core/zoom/zoom.utils.ts","../node_modules/react-zoom-pan-pinch/src/core/pan/panning.utils.ts","../node_modules/react-zoom-pan-pinch/src/core/pan/velocity.utils.ts","../node_modules/react-zoom-pan-pinch/src/core/pan/velocity.logic.ts","../node_modules/react-zoom-pan-pinch/src/core/pan/panning.logic.ts","../node_modules/react-zoom-pan-pinch/src/core/zoom/zoom.logic.ts","../node_modules/react-zoom-pan-pinch/src/constants/state.constants.ts","../node_modules/react-zoom-pan-pinch/src/utils/state.utils.ts","../node_modules/react-zoom-pan-pinch/src/core/handlers/handlers.utils.ts","../node_modules/react-zoom-pan-pinch/src/core/handlers/handlers.logic.ts","../node_modules/react-zoom-pan-pinch/src/utils/context.utils.ts","../node_modules/react-zoom-pan-pinch/src/utils/event.utils.ts","../node_modules/react-zoom-pan-pinch/src/utils/helpers.utils.ts","../node_modules/react-zoom-pan-pinch/src/utils/styles.utils.ts","../node_modules/react-zoom-pan-pinch/src/core/wheel/wheel.utils.ts","../node_modules/react-zoom-pan-pinch/src/core/pinch/pinch.utils.ts","../node_modules/react-zoom-pan-pinch/src/core/wheel/wheel.logic.ts","../node_modules/react-zoom-pan-pinch/src/core/pinch/pinch.logic.ts","../node_modules/react-zoom-pan-pinch/src/core/double-click/double-click.logic.ts","../node_modules/react-zoom-pan-pinch/src/components/transform-context.tsx","../node_modules/react-zoom-pan-pinch/src/components/transform-wrapper.tsx","../node_modules/react-zoom-pan-pinch/node_modules/style-inject/dist/style-inject.es.js","../node_modules/react-zoom-pan-pinch/src/components/transform-component.tsx"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","/**\n * Rounds number to given decimal\n * eg. roundNumber(2.34343, 1) => 2.3\n */\nexport const roundNumber = (num: number, decimal: number) => {\n  return Number(num.toFixed(decimal));\n};\n\n/**\n * Checks if value is number, if not it returns default value\n * 1# eg. checkIsNumber(2, 30) => 2\n * 2# eg. checkIsNumber(null, 30) => 30\n */\nexport const checkIsNumber = (num: any, defaultValue: number) => {\n  return typeof num === \"number\" ? num : defaultValue;\n};\n","import { ReactZoomPanPinchRef } from \"../models\";\n\nexport const handleCallback = <T>(\n  context: ReactZoomPanPinchRef,\n  event: T,\n  callback?: (context: ReactZoomPanPinchRef, event: T) => void,\n): void => {\n  if (callback && typeof callback === \"function\") {\n    callback(context, event);\n  }\n};\n","/**\n * Functions should return denominator of the target value, which is the next animation step.\n * t is a value from 0 to 1, reflecting the percentage of animation status.\n */\nconst easeOut = function (t: number): number {\n  return -Math.cos(t * Math.PI) / 2 + 0.5;\n};\n// linear\nconst linear = function (t: number): number {\n  return t;\n};\n// accelerating from zero velocity\nconst easeInQuad = function (t: number): number {\n  return t * t;\n};\n// decelerating to zero velocity\nconst easeOutQuad = function (t: number): number {\n  return t * (2 - t);\n};\n// acceleration until halfway, then deceleration\nconst easeInOutQuad = function (t: number): number {\n  return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n};\n// accelerating from zero velocity\nconst easeInCubic = function (t: number): number {\n  return t * t * t;\n};\n// decelerating to zero velocity\nconst easeOutCubic = function (t: number): number {\n  return --t * t * t + 1;\n};\n// acceleration until halfway, then deceleration\nconst easeInOutCubic = function (t: number): number {\n  return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n};\n// accelerating from zero velocity\nconst easeInQuart = function (t: number): number {\n  return t * t * t * t;\n};\n// decelerating to zero velocity\nconst easeOutQuart = function (t: number): number {\n  return 1 - --t * t * t * t;\n};\n// acceleration until halfway, then deceleration\nconst easeInOutQuart = function (t: number): number {\n  return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n};\n// accelerating from zero velocity\nconst easeInQuint = function (t: number): number {\n  return t * t * t * t * t;\n};\n// decelerating to zero velocity\nconst easeOutQuint = function (t: number): number {\n  return 1 + --t * t * t * t * t;\n};\n// acceleration until halfway, then deceleration\nconst easeInOutQuint = function (t: number): number {\n  return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n};\n\nexport const animations = {\n  easeOut,\n  linear,\n  easeInQuad,\n  easeOutQuad,\n  easeInOutQuad,\n  easeInCubic,\n  easeOutCubic,\n  easeInOutCubic,\n  easeInQuart,\n  easeOutQuart,\n  easeInOutQuart,\n  easeInQuint,\n  easeOutQuint,\n  easeInOutQuint,\n};\n","import { animations } from \"./animations.constants\";\n\nimport {\n  AnimationType,\n  ReactZoomPanPinchContext,\n  StateType,\n} from \"../../models\";\n\nconst handleCancelAnimationFrame = (animation: AnimationType | null) => {\n  if (typeof animation === \"number\") {\n    cancelAnimationFrame(animation);\n  }\n};\n\nexport const handleCancelAnimation = (\n  contextInstance: ReactZoomPanPinchContext,\n): void => {\n  if (!contextInstance.mounted) return;\n  handleCancelAnimationFrame(contextInstance.animation);\n  // Clear animation state\n  contextInstance.animate = false;\n  contextInstance.animation = null;\n  contextInstance.velocity = null;\n};\n\nexport function handleSetupAnimation(\n  contextInstance: ReactZoomPanPinchContext,\n  animationName: string,\n  animationTime: number,\n  callback: (step: number) => void,\n): void {\n  if (!contextInstance.mounted) return;\n  const startTime = new Date().getTime();\n  const lastStep = 1;\n\n  // if another animation is active\n  handleCancelAnimation(contextInstance);\n\n  // new animation\n  contextInstance.animation = () => {\n    if (!contextInstance.mounted) {\n      return handleCancelAnimationFrame(contextInstance.animation);\n    }\n\n    const frameTime = new Date().getTime() - startTime;\n    const animationProgress = frameTime / animationTime;\n    const animationType = animations[animationName];\n\n    const step = animationType(animationProgress);\n\n    if (frameTime >= animationTime) {\n      callback(lastStep);\n      contextInstance.animation = null;\n    } else if (contextInstance.animation) {\n      callback(step);\n      requestAnimationFrame(contextInstance.animation);\n    }\n  };\n\n  requestAnimationFrame(contextInstance.animation);\n}\n\nexport function animate(\n  contextInstance: ReactZoomPanPinchContext,\n  targetState: StateType,\n  animationTime: number,\n  animationName: string,\n): void {\n  const isValid = isValidTargetState(targetState);\n  if (!contextInstance.mounted || !isValid) return;\n  const { setTransformState } = contextInstance;\n  const { scale, positionX, positionY } = contextInstance.transformState;\n\n  const scaleDiff = targetState.scale - scale;\n  const positionXDiff = targetState.positionX - positionX;\n  const positionYDiff = targetState.positionY - positionY;\n\n  if (animationTime === 0) {\n    setTransformState(\n      targetState.scale,\n      targetState.positionX,\n      targetState.positionY,\n    );\n  } else {\n    // animation start timestamp\n    handleSetupAnimation(\n      contextInstance,\n      animationName,\n      animationTime,\n      (step: number) => {\n        const newScale = scale + scaleDiff * step;\n        const newPositionX = positionX + positionXDiff * step;\n        const newPositionY = positionY + positionYDiff * step;\n\n        setTransformState(newScale, newPositionX, newPositionY);\n      },\n    );\n  }\n}\n\nfunction isValidTargetState(targetState: StateType): boolean {\n  const { scale, positionX, positionY } = targetState;\n\n  if (isNaN(scale) || isNaN(positionX) || isNaN(positionY)) {\n    return false;\n  }\n\n  return true;\n}\n","import { roundNumber } from \"../../utils\";\n\nimport {\n  BoundsType,\n  PositionType,\n  ReactZoomPanPinchContext,\n} from \"../../models\";\nimport { ComponentsSizesType } from \"./bounds.types\";\n\nexport function getComponentsSizes(\n  wrapperComponent: HTMLDivElement,\n  contentComponent: HTMLDivElement,\n  newScale: number,\n): ComponentsSizesType {\n  const wrapperWidth = wrapperComponent.offsetWidth;\n  const wrapperHeight = wrapperComponent.offsetHeight;\n\n  const contentWidth = contentComponent.offsetWidth;\n  const contentHeight = contentComponent.offsetHeight;\n\n  const newContentWidth = contentWidth * newScale;\n  const newContentHeight = contentHeight * newScale;\n  const newDiffWidth = wrapperWidth - newContentWidth;\n  const newDiffHeight = wrapperHeight - newContentHeight;\n\n  return {\n    wrapperWidth,\n    wrapperHeight,\n    newContentWidth,\n    newDiffWidth,\n    newContentHeight,\n    newDiffHeight,\n  };\n}\n\nexport const getBounds = (\n  wrapperWidth: number,\n  newContentWidth: number,\n  diffWidth: number,\n  wrapperHeight: number,\n  newContentHeight: number,\n  diffHeight: number,\n  centerZoomedOut: boolean,\n): BoundsType => {\n  const scaleWidthFactor =\n    wrapperWidth > newContentWidth\n      ? diffWidth * (centerZoomedOut ? 1 : 0.5)\n      : 0;\n  const scaleHeightFactor =\n    wrapperHeight > newContentHeight\n      ? diffHeight * (centerZoomedOut ? 1 : 0.5)\n      : 0;\n\n  const minPositionX = wrapperWidth - newContentWidth - scaleWidthFactor;\n  const maxPositionX = scaleWidthFactor;\n  const minPositionY = wrapperHeight - newContentHeight - scaleHeightFactor;\n  const maxPositionY = scaleHeightFactor;\n\n  return { minPositionX, maxPositionX, minPositionY, maxPositionY };\n};\n\nexport const calculateBounds = (\n  contextInstance: ReactZoomPanPinchContext,\n  newScale: number,\n): BoundsType => {\n  const { wrapperComponent, contentComponent } = contextInstance;\n  const { centerZoomedOut } = contextInstance.setup;\n\n  if (!wrapperComponent || !contentComponent) {\n    throw new Error(\"Components are not mounted\");\n  }\n\n  const {\n    wrapperWidth,\n    wrapperHeight,\n    newContentWidth,\n    newDiffWidth,\n    newContentHeight,\n    newDiffHeight,\n  } = getComponentsSizes(wrapperComponent, contentComponent, newScale);\n\n  const bounds = getBounds(\n    wrapperWidth,\n    newContentWidth,\n    newDiffWidth,\n    wrapperHeight,\n    newContentHeight,\n    newDiffHeight,\n    Boolean(centerZoomedOut),\n  );\n  return bounds;\n};\n\nexport const handleCalculateBounds = (\n  contextInstance: ReactZoomPanPinchContext,\n  newScale: number,\n): BoundsType => {\n  const bounds = calculateBounds(contextInstance, newScale);\n\n  // Save bounds\n  contextInstance.bounds = bounds;\n  return bounds;\n};\n\nexport function getMouseBoundedPosition(\n  positionX: number,\n  positionY: number,\n  bounds: BoundsType,\n  limitToBounds: boolean,\n  paddingValueX: number,\n  paddingValueY: number,\n  wrapperComponent: HTMLDivElement | null,\n): PositionType {\n  const { minPositionX, minPositionY, maxPositionX, maxPositionY } = bounds;\n\n  let paddingX = 0;\n  let paddingY = 0;\n\n  if (wrapperComponent) {\n    paddingX = paddingValueX;\n    paddingY = paddingValueY;\n  }\n\n  const x = boundLimiter(\n    positionX,\n    minPositionX - paddingX,\n    maxPositionX + paddingX,\n    limitToBounds,\n  );\n\n  const y = boundLimiter(\n    positionY,\n    minPositionY - paddingY,\n    maxPositionY + paddingY,\n    limitToBounds,\n  );\n  return { x, y };\n}\n\n/**\n * Keeps value between given bounds, used for limiting view to given boundaries\n * 1# eg. boundLimiter(2, 0, 3, true) => 2\n * 2# eg. boundLimiter(4, 0, 3, true) => 3\n * 3# eg. boundLimiter(-2, 0, 3, true) => 0\n * 4# eg. boundLimiter(10, 0, 3, false) => 10\n */\nexport const boundLimiter = (\n  value: number,\n  minBound: number,\n  maxBound: number,\n  isActive: boolean,\n): number => {\n  if (!isActive) return roundNumber(value, 2);\n  if (value < minBound) return roundNumber(minBound, 2);\n  if (value > maxBound) return roundNumber(maxBound, 2);\n  return roundNumber(value, 2);\n};\n","import {\n  BoundsType,\n  PositionType,\n  ReactZoomPanPinchContext,\n} from \"../../models\";\nimport { getMouseBoundedPosition } from \"../bounds/bounds.utils\";\n\nexport function handleCalculateZoomPositions(\n  contextInstance: ReactZoomPanPinchContext,\n  mouseX: number,\n  mouseY: number,\n  newScale: number,\n  bounds: BoundsType,\n  limitToBounds: boolean,\n): PositionType {\n  const { scale, positionX, positionY } = contextInstance.transformState;\n\n  const scaleDifference = newScale - scale;\n\n  if (typeof mouseX !== \"number\" || typeof mouseY !== \"number\") {\n    console.error(\"Mouse X and Y position were not provided!\");\n    return { x: positionX, y: positionY };\n  }\n\n  const calculatedPositionX = positionX - mouseX * scaleDifference;\n  const calculatedPositionY = positionY - mouseY * scaleDifference;\n\n  // do not limit to bounds when there is padding animation,\n  // it causes animation strange behaviour\n\n  const newPositions = getMouseBoundedPosition(\n    calculatedPositionX,\n    calculatedPositionY,\n    bounds,\n    limitToBounds,\n    0,\n    0,\n    null,\n  );\n\n  return newPositions;\n}\n\nexport function checkZoomBounds(\n  zoom: number,\n  minScale: number,\n  maxScale: number,\n  zoomPadding: number,\n  enablePadding: boolean,\n): number {\n  const scalePadding = enablePadding ? zoomPadding : 0;\n  const minScaleWithPadding = minScale - scalePadding;\n\n  if (!isNaN(maxScale) && zoom >= maxScale) return maxScale;\n  if (!isNaN(minScale) && zoom <= minScaleWithPadding)\n    return minScaleWithPadding;\n  return zoom;\n}\n","import {\n  PositionType,\n  ReactZoomPanPinchContext,\n  ReactZoomPanPinchState,\n} from \"../../models\";\nimport { isExcludedNode } from \"../../utils\";\nimport { getMouseBoundedPosition } from \"../bounds/bounds.utils\";\nimport { handleCalculateZoomPositions } from \"../zoom/zoom.utils\";\n\nexport const isPanningStartAllowed = (\n  contextInstance: ReactZoomPanPinchContext,\n  event: MouseEvent | TouchEvent,\n): boolean => {\n  const { excluded } = contextInstance.setup.panning;\n  const { isInitialized, wrapperComponent } = contextInstance;\n\n  const target = event.target as HTMLElement;\n  const isWrapperChild = wrapperComponent?.contains(target);\n  const isAllowed = isInitialized && target && isWrapperChild;\n\n  if (!isAllowed) return false;\n\n  const isExcluded = isExcludedNode(target, excluded);\n\n  if (isExcluded) return false;\n\n  return true;\n};\n\nexport const isPanningAllowed = (\n  contextInstance: ReactZoomPanPinchContext,\n): boolean => {\n  const { isInitialized, isPanning, setup } = contextInstance;\n  const { disabled } = setup.panning;\n\n  const isAllowed = isInitialized && isPanning && !disabled;\n\n  if (!isAllowed) return false;\n\n  return true;\n};\n\nexport const handlePanningSetup = (\n  contextInstance: ReactZoomPanPinchContext,\n  event: MouseEvent,\n): void => {\n  const { positionX, positionY } = contextInstance.transformState;\n\n  contextInstance.isPanning = true;\n\n  // Panning with mouse\n  const x = event.clientX;\n  const y = event.clientY;\n\n  contextInstance.startCoords = { x: x - positionX, y: y - positionY };\n};\n\nexport const handleTouchPanningSetup = (\n  contextInstance: ReactZoomPanPinchContext,\n  event: TouchEvent,\n): void => {\n  const touches = event.touches;\n  const { positionX, positionY } = contextInstance.transformState;\n\n  contextInstance.isPanning = true;\n\n  // Panning with touch\n  const oneFingerTouch = touches.length === 1;\n  if (oneFingerTouch) {\n    const x = touches[0].clientX;\n    const y = touches[0].clientY;\n    contextInstance.startCoords = { x: x - positionX, y: y - positionY };\n  }\n};\nexport function handlePanToBounds(\n  contextInstance: ReactZoomPanPinchContext,\n): Omit<ReactZoomPanPinchState, \"previousScale\"> | undefined {\n  const { positionX, positionY, scale } = contextInstance.transformState;\n  const { disabled, limitToBounds, centerZoomedOut } = contextInstance.setup;\n  const { wrapperComponent } = contextInstance;\n\n  if (disabled || !wrapperComponent || !contextInstance.bounds) return;\n\n  const {\n    maxPositionX,\n    minPositionX,\n    maxPositionY,\n    minPositionY,\n  } = contextInstance.bounds;\n\n  const xChanged = positionX > maxPositionX || positionX < minPositionX;\n  const yChanged = positionY > maxPositionY || positionY < minPositionY;\n\n  const mousePosX =\n    positionX > maxPositionX\n      ? wrapperComponent.offsetWidth\n      : contextInstance.setup.minPositionX || 0;\n  const mousePosY =\n    positionY > maxPositionY\n      ? wrapperComponent.offsetHeight\n      : contextInstance.setup.minPositionY || 0;\n\n  const { x, y } = handleCalculateZoomPositions(\n    contextInstance,\n    mousePosX,\n    mousePosY,\n    scale,\n    contextInstance.bounds,\n    limitToBounds || centerZoomedOut,\n  );\n\n  return {\n    scale,\n    positionX: xChanged ? x : positionX,\n    positionY: yChanged ? y : positionY,\n  };\n}\n\nexport function handlePaddingAnimation(\n  contextInstance: ReactZoomPanPinchContext,\n  positionX: number,\n  positionY: number,\n): void {\n  const { scale } = contextInstance.transformState;\n  const { sizeX, sizeY } = contextInstance.setup.alignmentAnimation;\n\n  if (!sizeX && !sizeY) return;\n\n  contextInstance.setTransformState(scale, positionX, positionY);\n}\n\nexport function handleNewPosition(\n  contextInstance: ReactZoomPanPinchContext,\n  newPositionX: number,\n  newPositionY: number,\n  paddingValueX: number,\n  paddingValueY: number,\n): void {\n  const { limitToBounds } = contextInstance.setup;\n  const { wrapperComponent, bounds } = contextInstance;\n  const { scale, positionX, positionY } = contextInstance.transformState;\n\n  if (\n    wrapperComponent === null ||\n    bounds === null ||\n    (newPositionX === positionX && newPositionY === positionY)\n  ) {\n    return;\n  }\n\n  const { x, y } = getMouseBoundedPosition(\n    newPositionX,\n    newPositionY,\n    bounds,\n    limitToBounds,\n    paddingValueX,\n    paddingValueY,\n    wrapperComponent,\n  );\n\n  contextInstance.setTransformState(scale, x, y);\n}\n\nexport const getPanningClientPosition = (\n  contextInstance: ReactZoomPanPinchContext,\n  clientX: number,\n  clientY: number,\n): PositionType => {\n  const { startCoords, transformState } = contextInstance;\n  const { panning } = contextInstance.setup;\n  const { lockAxisX, lockAxisY } = panning;\n  const { positionX, positionY } = transformState;\n\n  if (!startCoords) {\n    return { x: positionX, y: positionY };\n  }\n\n  const mouseX = clientX - startCoords.x;\n  const mouseY = clientY - startCoords.y;\n  const newPositionX = lockAxisX ? positionX : mouseX;\n  const newPositionY = lockAxisY ? positionY : mouseY;\n\n  return { x: newPositionX, y: newPositionY };\n};\n\nexport const getPaddingValue = (\n  contextInstance: ReactZoomPanPinchContext,\n  size: number,\n): number => {\n  const { setup, transformState } = contextInstance;\n  const { scale } = transformState;\n  const { minScale, disablePadding } = setup;\n\n  if (size > 0 && scale >= minScale && !disablePadding) {\n    return size;\n  }\n\n  return 0;\n};\n","import { ReactZoomPanPinchContext } from \"../../models/context.model\";\nimport { boundLimiter } from \"../bounds/bounds.utils\";\n\nexport const isVelocityCalculationAllowed = (\n  contextInstance: ReactZoomPanPinchContext,\n): boolean => {\n  const { mounted } = contextInstance;\n  const { disabled, velocityAnimation } = contextInstance.setup;\n  const { scale } = contextInstance.transformState;\n  const { disabled: disabledVelocity } = velocityAnimation;\n\n  const isAllowed = !disabledVelocity || scale > 1 || !disabled || mounted;\n\n  if (!isAllowed) return false;\n\n  return true;\n};\n\nexport const isVelocityAllowed = (\n  contextInstance: ReactZoomPanPinchContext,\n): boolean => {\n  const { mounted, velocity, bounds } = contextInstance;\n  const { disabled, velocityAnimation } = contextInstance.setup;\n  const { scale } = contextInstance.transformState;\n  const { disabled: disabledVelocity } = velocityAnimation;\n\n  const isAllowed = !disabledVelocity || scale > 1 || !disabled || mounted;\n\n  if (!isAllowed) return false;\n  if (!velocity || !bounds) return false;\n\n  return true;\n};\n\nexport function getVelocityMoveTime(\n  contextInstance: ReactZoomPanPinchContext,\n  velocity: number,\n): number {\n  const { velocityAnimation } = contextInstance.setup;\n  const { equalToMove, animationTime, sensitivity } = velocityAnimation;\n\n  if (equalToMove) {\n    return animationTime * velocity * sensitivity;\n  }\n  return animationTime;\n}\n\nexport function getVelocityPosition(\n  newPosition: number,\n  startPosition: number,\n  currentPosition: number,\n  isLocked: boolean,\n  limitToBounds: boolean,\n  minPosition: number,\n  maxPosition: number,\n  minTarget: number,\n  maxTarget: number,\n  step: number,\n): number {\n  if (limitToBounds) {\n    if (startPosition > maxPosition && currentPosition > maxPosition) {\n      const calculatedPosition =\n        maxPosition + (newPosition - maxPosition) * step;\n\n      if (calculatedPosition > maxTarget) return maxTarget;\n      if (calculatedPosition < maxPosition) return maxPosition;\n      return calculatedPosition;\n    }\n    if (startPosition < minPosition && currentPosition < minPosition) {\n      const calculatedPosition =\n        minPosition + (newPosition - minPosition) * step;\n      if (calculatedPosition < minTarget) return minTarget;\n      if (calculatedPosition > minPosition) return minPosition;\n      return calculatedPosition;\n    }\n  }\n  if (isLocked) return startPosition;\n  return boundLimiter(newPosition, minPosition, maxPosition, limitToBounds);\n}\n","import { PositionType } from \"../../models\";\nimport { ReactZoomPanPinchContext } from \"../../models/context.model\";\nimport { animations } from \"../animations/animations.constants\";\nimport { handleSetupAnimation } from \"../animations/animations.utils\";\nimport { getPaddingValue } from \"./panning.utils\";\nimport {\n  getVelocityPosition,\n  getVelocityMoveTime,\n  isVelocityAllowed,\n  isVelocityCalculationAllowed,\n} from \"./velocity.utils\";\n\nexport function getSizeMultiplier(\n  wrapperComponent: HTMLDivElement,\n  equalToMove: boolean,\n): number {\n  const defaultMultiplier = 1;\n\n  if (equalToMove) {\n    return Math.min(\n      defaultMultiplier,\n      wrapperComponent.offsetWidth / window.innerWidth,\n    );\n  }\n\n  return defaultMultiplier;\n}\n\nexport function handleCalculateVelocity(\n  contextInstance: ReactZoomPanPinchContext,\n  position: PositionType,\n): void {\n  const isAllowed = isVelocityCalculationAllowed(contextInstance);\n\n  if (!isAllowed) {\n    return;\n  }\n\n  const { lastMousePosition, velocityTime, setup } = contextInstance;\n  const { wrapperComponent } = contextInstance;\n  const { equalToMove } = setup.velocityAnimation;\n\n  const now = Date.now();\n  if (lastMousePosition && velocityTime && wrapperComponent) {\n    const sizeMultiplier = getSizeMultiplier(wrapperComponent, equalToMove);\n\n    const distanceX = position.x - lastMousePosition.x;\n    const distanceY = position.y - lastMousePosition.y;\n\n    const velocityX = distanceX / sizeMultiplier;\n    const velocityY = distanceY / sizeMultiplier;\n\n    const interval = now - velocityTime;\n    const speed = distanceX * distanceX + distanceY * distanceY;\n    const velocity = Math.sqrt(speed) / interval;\n\n    contextInstance.velocity = { velocityX, velocityY, total: velocity };\n  }\n  contextInstance.lastMousePosition = position;\n  contextInstance.velocityTime = now;\n}\n\nexport function handleVelocityPanning(\n  contextInstance: ReactZoomPanPinchContext,\n): void {\n  const { velocity, bounds, setup, wrapperComponent } = contextInstance;\n  const isAllowed = isVelocityAllowed(contextInstance);\n\n  if (!isAllowed || !velocity || !bounds || !wrapperComponent) {\n    return;\n  }\n\n  const { velocityX, velocityY, total } = velocity;\n  const { maxPositionX, minPositionX, maxPositionY, minPositionY } = bounds;\n  const { limitToBounds, alignmentAnimation } = setup;\n  const { zoomAnimation, panning } = setup;\n  const { lockAxisY, lockAxisX } = panning;\n  const { animationType } = zoomAnimation;\n  const { sizeX, sizeY, velocityAlignmentTime } = alignmentAnimation;\n\n  const alignAnimationTime = velocityAlignmentTime;\n  const moveAnimationTime = getVelocityMoveTime(contextInstance, total);\n  const finalAnimationTime = Math.max(moveAnimationTime, alignAnimationTime);\n\n  const paddingValueX = getPaddingValue(contextInstance, sizeX);\n  const paddingValueY = getPaddingValue(contextInstance, sizeY);\n  const paddingX = (paddingValueX * wrapperComponent.offsetWidth) / 100;\n  const paddingY = (paddingValueY * wrapperComponent.offsetHeight) / 100;\n  const maxTargetX = maxPositionX + paddingX;\n  const minTargetX = minPositionX - paddingX;\n\n  const maxTargetY = maxPositionY + paddingY;\n  const minTargetY = minPositionY - paddingY;\n\n  const startState = contextInstance.transformState;\n\n  const startTime = new Date().getTime();\n  handleSetupAnimation(\n    contextInstance,\n    animationType,\n    finalAnimationTime,\n    (step: number) => {\n      const { scale, positionX, positionY } = contextInstance.transformState;\n      const frameTime = new Date().getTime() - startTime;\n      const animationProgress = frameTime / alignAnimationTime;\n      const alignAnimation = animations[alignmentAnimation.animationType];\n      const alignStep = 1 - alignAnimation(Math.min(1, animationProgress));\n\n      const customStep = 1 - step;\n\n      const newPositionX = positionX + velocityX * customStep;\n      const newPositionY = positionY + velocityY * customStep;\n\n      const currentPositionX = getVelocityPosition(\n        newPositionX,\n        startState.positionX,\n        positionX,\n        lockAxisX,\n        limitToBounds,\n        minPositionX,\n        maxPositionX,\n        minTargetX,\n        maxTargetX,\n        alignStep,\n      );\n      const currentPositionY = getVelocityPosition(\n        newPositionY,\n        startState.positionY,\n        positionY,\n        lockAxisY,\n        limitToBounds,\n        minPositionY,\n        maxPositionY,\n        minTargetY,\n        maxTargetY,\n        alignStep,\n      );\n\n      if (positionX !== newPositionX || positionY !== newPositionY) {\n        contextInstance.setTransformState(\n          scale,\n          currentPositionX,\n          currentPositionY,\n        );\n      }\n    },\n  );\n}\n","import { ReactZoomPanPinchContext } from \"../../models/context.model\";\nimport { animate, handleCancelAnimation } from \"../animations/animations.utils\";\nimport { handleCalculateBounds } from \"../bounds/bounds.utils\";\nimport {\n  getPaddingValue,\n  getPanningClientPosition,\n  handleNewPosition,\n  handlePanningSetup,\n  handlePanToBounds,\n  handleTouchPanningSetup,\n} from \"./panning.utils\";\nimport {\n  handleVelocityPanning,\n  handleCalculateVelocity,\n} from \"./velocity.logic\";\n\nexport function handlePanningStart(\n  contextInstance: ReactZoomPanPinchContext,\n  event: MouseEvent | TouchEvent,\n): void {\n  const { scale } = contextInstance.transformState;\n\n  handleCancelAnimation(contextInstance);\n  handleCalculateBounds(contextInstance, scale);\n  if (window.TouchEvent !== undefined && event instanceof TouchEvent) {\n    handleTouchPanningSetup(contextInstance, event as TouchEvent);\n  } else {\n    handlePanningSetup(contextInstance, event as MouseEvent);\n  }\n}\n\nexport function handlePanning(\n  contextInstance: ReactZoomPanPinchContext,\n  clientX: number,\n  clientY: number,\n): void {\n  const { startCoords, setup } = contextInstance;\n  const { sizeX, sizeY } = setup.alignmentAnimation;\n\n  if (!startCoords) return;\n\n  const { x, y } = getPanningClientPosition(contextInstance, clientX, clientY);\n  const paddingValueX = getPaddingValue(contextInstance, sizeX);\n  const paddingValueY = getPaddingValue(contextInstance, sizeY);\n\n  handleCalculateVelocity(contextInstance, { x, y });\n  handleNewPosition(contextInstance, x, y, paddingValueX, paddingValueY);\n}\n\nexport function handlePanningEnd(\n  contextInstance: ReactZoomPanPinchContext,\n): void {\n  if (contextInstance.isPanning) {\n    const { velocityDisabled } = contextInstance.setup.panning;\n    const { velocity, wrapperComponent, contentComponent } = contextInstance;\n\n    contextInstance.isPanning = false;\n    contextInstance.animate = false;\n    contextInstance.animation = null;\n\n    const wrapperRect = wrapperComponent?.getBoundingClientRect();\n    const contentRect = contentComponent?.getBoundingClientRect();\n\n    const wrapperWidth = wrapperRect?.width || 0;\n    const wrapperHeight = wrapperRect?.height || 0;\n    const contentWidth = contentRect?.width || 0;\n    const contentHeight = contentRect?.height || 0;\n    const isZoomed =\n      wrapperWidth < contentWidth || wrapperHeight < contentHeight;\n\n    const shouldAnimate =\n      !velocityDisabled && velocity && velocity?.total > 0.1 && isZoomed;\n\n    if (shouldAnimate) {\n      handleVelocityPanning(contextInstance);\n    } else {\n      handleAlignToBounds(contextInstance);\n    }\n  }\n}\n\nexport function handleAlignToBounds(\n  contextInstance: ReactZoomPanPinchContext,\n): void {\n  const { scale } = contextInstance.transformState;\n  const { minScale, alignmentAnimation } = contextInstance.setup;\n  const { disabled, sizeX, sizeY, animationTime, animationType } =\n    alignmentAnimation;\n\n  const isDisabled = disabled || scale < minScale || (!sizeX && !sizeY);\n\n  if (isDisabled) return;\n\n  const targetState = handlePanToBounds(contextInstance);\n\n  if (targetState) {\n    animate(contextInstance, targetState, animationTime, animationType);\n  }\n}\n","import { ReactZoomPanPinchContext, ReactZoomPanPinchState } from \"../../models\";\nimport { roundNumber } from \"../../utils\";\nimport { animate } from \"../animations/animations.utils\";\nimport { handleCalculateBounds } from \"../bounds/bounds.utils\";\nimport { handleAlignToBounds } from \"../pan/panning.logic\";\nimport { checkZoomBounds, handleCalculateZoomPositions } from \"./zoom.utils\";\n\nexport function handleAlignToScaleBounds(\n  contextInstance: ReactZoomPanPinchContext,\n  mousePositionX?: number,\n  mousePositionY?: number,\n): void {\n  const { scale } = contextInstance.transformState;\n  const { wrapperComponent } = contextInstance;\n  const { minScale, limitToBounds, zoomAnimation } = contextInstance.setup;\n  const { disabled, animationTime, animationType } = zoomAnimation;\n\n  const isDisabled = disabled || scale >= minScale;\n\n  if (scale >= 1 || limitToBounds) {\n    // fire fit to bounds animation\n    handleAlignToBounds(contextInstance);\n  }\n\n  if (isDisabled || !wrapperComponent || !contextInstance.mounted) return;\n\n  const mouseX = mousePositionX || wrapperComponent.offsetWidth / 2;\n  const mouseY = mousePositionY || wrapperComponent.offsetHeight / 2;\n\n  const targetState = handleZoomToPoint(\n    contextInstance,\n    minScale,\n    mouseX,\n    mouseY,\n  );\n\n  if (targetState) {\n    animate(contextInstance, targetState, animationTime, animationType);\n  }\n}\n\nexport function handleZoomToPoint(\n  contextInstance: ReactZoomPanPinchContext,\n  scale: number,\n  mouseX: number,\n  mouseY: number,\n): Omit<ReactZoomPanPinchState, \"previousScale\"> | undefined {\n  const { minScale, maxScale, limitToBounds } = contextInstance.setup;\n\n  const newScale = checkZoomBounds(\n    roundNumber(scale, 2),\n    minScale,\n    maxScale,\n    0,\n    false,\n  );\n  const bounds = handleCalculateBounds(contextInstance, newScale);\n\n  const { x, y } = handleCalculateZoomPositions(\n    contextInstance,\n    mouseX,\n    mouseY,\n    newScale,\n    bounds,\n    limitToBounds,\n  );\n\n  return { scale: newScale, positionX: x, positionY: y };\n}\n","import {\n  LibrarySetup,\n  ReactZoomPanPinchContext,\n} from \"../models/context.model\";\nimport {\n  ReactZoomPanPinchComponentHelpers,\n  ReactZoomPanPinchState,\n} from \"../models/context.model\";\n\nexport const initialState: ReactZoomPanPinchState = {\n  previousScale: 1,\n  scale: 1,\n  positionX: 0,\n  positionY: 0,\n};\n\nexport const contextInitialState: ReactZoomPanPinchComponentHelpers &\n  ReactZoomPanPinchState & {\n    contextInstance: ReactZoomPanPinchContext | null;\n  } = {\n  ...initialState,\n  setComponents: () => undefined,\n  contextInstance: null,\n};\n\nexport const initialSetup: LibrarySetup = {\n  disabled: false,\n  minPositionX: null,\n  maxPositionX: null,\n  minPositionY: null,\n  maxPositionY: null,\n  minScale: 1,\n  maxScale: 8,\n  limitToBounds: true,\n  centerZoomedOut: false,\n  centerOnInit: false,\n  disablePadding: false,\n  wheel: {\n    step: 0.2,\n    disabled: false,\n    wheelDisabled: false,\n    touchPadDisabled: false,\n    activationKeys: [],\n    excluded: [],\n  },\n  panning: {\n    disabled: false,\n    velocityDisabled: false,\n    lockAxisX: false,\n    lockAxisY: false,\n    activationKeys: [],\n    excluded: [],\n  },\n  pinch: {\n    step: 5,\n    disabled: false,\n    excluded: [],\n  },\n  doubleClick: {\n    disabled: false,\n    step: 0.7,\n    mode: \"zoomIn\",\n    animationType: \"easeOut\",\n    animationTime: 200,\n    excluded: [],\n  },\n  zoomAnimation: {\n    disabled: false,\n    size: 0.4,\n    animationTime: 200,\n    animationType: \"easeOut\",\n  },\n  alignmentAnimation: {\n    disabled: false,\n    sizeX: 100,\n    sizeY: 100,\n    animationTime: 200,\n    velocityAlignmentTime: 400,\n    animationType: \"easeOut\",\n  },\n  velocityAnimation: {\n    disabled: false,\n    sensitivity: 1,\n    animationTime: 400,\n    animationType: \"easeOut\",\n    equalToMove: true,\n  },\n};\n","import {\n  LibrarySetup,\n  ReactZoomPanPinchProps,\n  ReactZoomPanPinchState,\n} from \"../models/context.model\";\nimport { initialSetup, initialState } from \"../constants/state.constants\";\n\nexport const createState = (\n  props: ReactZoomPanPinchProps,\n): ReactZoomPanPinchState => {\n  return {\n    previousScale: props.initialScale ?? initialState.scale,\n    scale: props.initialScale ?? initialState.scale,\n    positionX: props.initialPositionX ?? initialState.positionX,\n    positionY: props.initialPositionY ?? initialState.positionY,\n  };\n};\n\nexport const createSetup = (props: ReactZoomPanPinchProps): LibrarySetup => {\n  const newSetup = { ...initialSetup };\n\n  Object.keys(props).forEach((key) => {\n    const validValue = typeof props[key] !== \"undefined\";\n    const validParameter = typeof initialSetup[key] !== \"undefined\";\n    if (validParameter && validValue) {\n      const dataType = Object.prototype.toString.call(initialSetup[key]);\n      const isObject = dataType === \"[object Object]\";\n      const isArray = dataType === \"[object Array]\";\n      if (isObject) {\n        newSetup[key] = { ...initialSetup[key], ...props[key] };\n      } else if (isArray) {\n        newSetup[key] = [...initialSetup[key], ...props[key]];\n      } else {\n        newSetup[key] = props[key];\n      }\n    }\n  });\n\n  return newSetup;\n};\n","import { ReactZoomPanPinchContext } from \"../../models\";\nimport { animations } from \"../animations/animations.constants\";\nimport { handleZoomToPoint } from \"../zoom/zoom.logic\";\nimport { animate } from \"../animations/animations.utils\";\nimport { createState } from \"../../utils/state.utils\";\nimport { checkZoomBounds } from \"../zoom/zoom.utils\";\nimport { roundNumber } from \"../../utils\";\nimport { initialState } from \"../../constants/state.constants\";\nimport { PositionType } from \"../../models/calculations.model\";\nimport {\n  calculateBounds,\n  getMouseBoundedPosition,\n} from \"core/bounds/bounds.utils\";\n\nexport const handleCalculateButtonZoom = (\n  contextInstance: ReactZoomPanPinchContext,\n  delta: number,\n  step: number,\n): number => {\n  const { scale } = contextInstance.transformState;\n  const { wrapperComponent, setup } = contextInstance;\n  const { maxScale, minScale, zoomAnimation } = setup;\n  const { size } = zoomAnimation;\n\n  if (!wrapperComponent) {\n    throw new Error(\"Wrapper is not mounted\");\n  }\n\n  const targetScale = scale * Math.exp(delta * step);\n\n  const newScale = checkZoomBounds(\n    roundNumber(targetScale, 3),\n    minScale,\n    maxScale,\n    size,\n    false,\n  );\n  return newScale;\n};\n\nexport function handleZoomToViewCenter(\n  contextInstance: ReactZoomPanPinchContext,\n  delta: number,\n  step: number,\n  animationTime: number,\n  animationType: keyof typeof animations,\n): void {\n  const { wrapperComponent } = contextInstance;\n  const { scale, positionX, positionY } = contextInstance.transformState;\n\n  if (!wrapperComponent) return console.error(\"No WrapperComponent found\");\n\n  const wrapperWidth = wrapperComponent.offsetWidth;\n  const wrapperHeight = wrapperComponent.offsetHeight;\n  const mouseX = (wrapperWidth / 2 - positionX) / scale;\n  const mouseY = (wrapperHeight / 2 - positionY) / scale;\n\n  const newScale = handleCalculateButtonZoom(contextInstance, delta, step);\n\n  const targetState = handleZoomToPoint(\n    contextInstance,\n    newScale,\n    mouseX,\n    mouseY,\n  );\n\n  if (!targetState) {\n    return console.error(\n      \"Error during zoom event. New transformation state was not calculated.\",\n    );\n  }\n\n  animate(contextInstance, targetState, animationTime, animationType);\n}\n\nexport function resetTransformations(\n  contextInstance: ReactZoomPanPinchContext,\n  animationTime: number,\n  animationType: keyof typeof animations,\n): void {\n  const { setup, wrapperComponent } = contextInstance;\n  const { limitToBounds } = setup;\n  const initialTransformation = createState(contextInstance.props);\n  const { scale, positionX, positionY } = contextInstance.transformState;\n\n  if (!wrapperComponent) return;\n\n  const newBounds = calculateBounds(\n    contextInstance,\n    initialTransformation.scale,\n  );\n\n  const boundedPositions = getMouseBoundedPosition(\n    initialTransformation.positionX,\n    initialTransformation.positionY,\n    newBounds,\n    limitToBounds,\n    0,\n    0,\n    wrapperComponent,\n  );\n\n  const newState = {\n    scale: initialTransformation.scale,\n    positionX: boundedPositions.x,\n    positionY: boundedPositions.y,\n  };\n\n  if (\n    scale === initialTransformation.scale &&\n    positionX === initialTransformation.positionX &&\n    positionY === initialTransformation.positionY\n  ) {\n    return;\n  }\n\n  animate(contextInstance, newState, animationTime, animationType);\n}\n\nexport function calculateZoomToNode(\n  contextInstance: ReactZoomPanPinchContext,\n  node: HTMLElement,\n  customZoom?: number,\n): { positionX: number; positionY: number; scale: number } {\n  const { wrapperComponent } = contextInstance;\n  const { limitToBounds, minScale, maxScale } = contextInstance.setup;\n  if (!wrapperComponent) return initialState;\n\n  const wrapperRect = wrapperComponent.getBoundingClientRect();\n  const nodeRect = getOffset(node);\n\n  const nodeLeft = nodeRect.x;\n  const nodeTop = nodeRect.y;\n  const nodeWidth = node.offsetWidth;\n  const nodeHeight = node.offsetHeight;\n\n  const scaleX = wrapperComponent.offsetWidth / nodeWidth;\n  const scaleY = wrapperComponent.offsetHeight / nodeHeight;\n\n  const newScale = checkZoomBounds(\n    customZoom || Math.min(scaleX, scaleY),\n    minScale,\n    maxScale,\n    0,\n    false,\n  );\n\n  const offsetX = (wrapperRect.width - nodeWidth * newScale) / 2;\n  const offsetY = (wrapperRect.height - nodeHeight * newScale) / 2;\n\n  const newPositionX = (wrapperRect.left - nodeLeft) * newScale + offsetX;\n  const newPositionY = (wrapperRect.top - nodeTop) * newScale + offsetY;\n\n  const bounds = calculateBounds(contextInstance, newScale);\n\n  const { x, y } = getMouseBoundedPosition(\n    newPositionX,\n    newPositionY,\n    bounds,\n    limitToBounds,\n    0,\n    0,\n    wrapperComponent,\n  );\n\n  return { positionX: x, positionY: y, scale: newScale };\n}\n\nfunction getOffset(element: HTMLElement): PositionType {\n  let el = element;\n\n  let offsetLeft = 0;\n  let offsetTop = 0;\n\n  while (el) {\n    offsetLeft += el.offsetLeft;\n    offsetTop += el.offsetTop;\n\n    el = el.offsetParent as HTMLElement;\n  }\n\n  return {\n    x: offsetLeft - window.scrollX,\n    y: offsetTop - window.scrollY,\n  };\n}\n\nexport function isValidZoomNode(node: HTMLElement | null): boolean {\n  if (!node) {\n    console.error(\"Zoom node not found\");\n    return false;\n  } else if (\n    node?.offsetWidth === undefined ||\n    node?.offsetHeight === undefined\n  ) {\n    console.error(\n      \"Zoom node is not valid - it must contain offsetWidth and offsetHeight\",\n    );\n    return false;\n  }\n  return true;\n}\n","import { ReactZoomPanPinchContext } from \"../../models\";\nimport {\n  calculateZoomToNode,\n  handleZoomToViewCenter,\n  isValidZoomNode,\n  resetTransformations,\n} from \"./handlers.utils\";\nimport { animations } from \"../animations/animations.constants\";\nimport { animate, handleCancelAnimation } from \"../animations/animations.utils\";\nimport { getCenterPosition } from \"../../utils\";\n\nexport const zoomIn = (contextInstance: ReactZoomPanPinchContext) => (\n  step = 0.5,\n  animationTime = 300,\n  animationType: keyof typeof animations = \"easeOut\",\n): void => {\n  handleZoomToViewCenter(\n    contextInstance,\n    1,\n    step,\n    animationTime,\n    animationType,\n  );\n};\n\nexport const zoomOut = (contextInstance: ReactZoomPanPinchContext) => (\n  step = 0.5,\n  animationTime = 300,\n  animationType: keyof typeof animations = \"easeOut\",\n): void => {\n  handleZoomToViewCenter(\n    contextInstance,\n    -1,\n    step,\n    animationTime,\n    animationType,\n  );\n};\n\nexport const setTransform = (contextInstance: ReactZoomPanPinchContext) => (\n  newPositionX: number,\n  newPositionY: number,\n  newScale: number,\n  animationTime = 300,\n  animationType: keyof typeof animations = \"easeOut\",\n): void => {\n  const { positionX, positionY, scale } = contextInstance.transformState;\n  const { wrapperComponent, contentComponent } = contextInstance;\n  const { disabled } = contextInstance.setup;\n\n  if (disabled || !wrapperComponent || !contentComponent) return;\n\n  const targetState = {\n    positionX: isNaN(newPositionX) ? positionX : newPositionX,\n    positionY: isNaN(newPositionY) ? positionY : newPositionY,\n    scale: isNaN(newScale) ? scale : newScale,\n  };\n\n  animate(contextInstance, targetState, animationTime, animationType);\n};\n\nexport const resetTransform = (contextInstance: ReactZoomPanPinchContext) => (\n  animationTime = 200,\n  animationType: keyof typeof animations = \"easeOut\",\n): void => {\n  resetTransformations(contextInstance, animationTime, animationType);\n};\n\nexport const centerView = (contextInstance: ReactZoomPanPinchContext) => (\n  scale?: number,\n  animationTime = 200,\n  animationType: keyof typeof animations = \"easeOut\",\n): void => {\n  const {\n    transformState,\n    wrapperComponent,\n    contentComponent,\n  } = contextInstance;\n  if (wrapperComponent && contentComponent) {\n    const targetState = getCenterPosition(\n      scale || transformState.scale,\n      wrapperComponent,\n      contentComponent,\n    );\n\n    animate(contextInstance, targetState, animationTime, animationType);\n  }\n};\n\nexport const zoomToElement = (contextInstance: ReactZoomPanPinchContext) => (\n  node: HTMLElement | string,\n  scale?: number,\n  animationTime = 600,\n  animationType: keyof typeof animations = \"easeOut\",\n): void => {\n  handleCancelAnimation(contextInstance);\n\n  const { wrapperComponent } = contextInstance;\n\n  const target: HTMLElement | null =\n    typeof node === \"string\" ? document.getElementById(node) : node;\n\n  if (\n    wrapperComponent &&\n    isValidZoomNode(target) &&\n    target &&\n    wrapperComponent.contains(target)\n  ) {\n    const targetState = calculateZoomToNode(contextInstance, target, scale);\n    animate(contextInstance, targetState, animationTime, animationType);\n  }\n};\n","import {\n  ReactZoomPanPinchContext,\n  ReactZoomPanPinchRef,\n} from \"../models/context.model\";\nimport {\n  zoomIn,\n  zoomOut,\n  setTransform,\n  resetTransform,\n  zoomToElement,\n  centerView,\n} from \"../core/handlers/handlers.logic\";\n\nexport const getContext = (\n  contextInstance: ReactZoomPanPinchContext,\n): ReactZoomPanPinchRef => {\n  return {\n    instance: contextInstance,\n    state: contextInstance.transformState,\n    zoomIn: zoomIn(contextInstance),\n    zoomOut: zoomOut(contextInstance),\n    setTransform: setTransform(contextInstance),\n    resetTransform: resetTransform(contextInstance),\n    centerView: centerView(contextInstance),\n    zoomToElement: zoomToElement(contextInstance),\n  };\n};\n","// We want to make event listeners non-passive, and to do so have to check\n// that browsers support EventListenerOptions in the first place.\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\nlet passiveSupported = false;\n\nexport function makePassiveEventOption(): any {\n  try {\n    const options = {\n      get passive() {\n        // This function will be called when the browser\n        //   attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      },\n    };\n\n    return options;\n  } catch (err) {\n    passiveSupported = false;\n    return passiveSupported;\n  }\n}\n","export const isExcludedNode = (\n  node: HTMLElement,\n  excluded: string[],\n): boolean => {\n  const targetTagName = node.tagName.toUpperCase();\n  const isExcludedTag = excluded.find(\n    (tag) => tag.toUpperCase() === targetTagName,\n  );\n\n  if (isExcludedTag) return true;\n\n  const isExcludedClassName = excluded.find((className) =>\n    node.classList.contains(className),\n  );\n\n  if (isExcludedClassName) return true;\n\n  return false;\n};\n\nexport const cancelTimeout = (\n  timeout: ReturnType<typeof setTimeout> | null,\n): void => {\n  if (timeout) {\n    clearTimeout(timeout);\n  }\n};\n","import { StateType } from \"models\";\n\nexport const getTransformStyles = (\n  x: number,\n  y: number,\n  scale: number,\n): string => {\n  // The shorthand for matrix does not work for Safari hence the need to explicitly use matrix3d\n  // Refer to https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix\n  const a = scale;\n  const b = 0;\n  const c = 0;\n  const d = scale;\n  const tx = x;\n  const ty = y;\n  return `matrix3d(${a}, ${b}, 0, 0, ${c}, ${d}, 0, 0, 0, 0, 1, 0, ${tx}, ${ty}, 0, 1)`;\n};\n\nexport const getCenterPosition = (\n  scale: number,\n  wrapperComponent: HTMLDivElement,\n  contentComponent: HTMLDivElement,\n): StateType => {\n  const contentWidth = contentComponent.offsetWidth * scale;\n  const contentHeight = contentComponent.offsetHeight * scale;\n\n  const centerPositionX = (wrapperComponent.offsetWidth - contentWidth) / 2;\n  const centerPositionY = (wrapperComponent.offsetHeight - contentHeight) / 2;\n\n  return {\n    scale,\n    positionX: centerPositionX,\n    positionY: centerPositionY,\n  };\n};\n","import { ReactZoomPanPinchContext } from \"../../models\";\nimport { PositionType } from \"../../models\";\n\nimport { checkIsNumber, isExcludedNode, roundNumber } from \"../../utils\";\nimport { checkZoomBounds } from \"../zoom/zoom.utils\";\n\nexport const isWheelAllowed = (\n  contextInstance: ReactZoomPanPinchContext,\n  event: WheelEvent,\n): boolean => {\n  const {\n    disabled,\n    wheelDisabled,\n    touchPadDisabled,\n    excluded,\n  } = contextInstance.setup.wheel;\n  const { isInitialized, isPanning } = contextInstance;\n\n  const target = event.target as HTMLElement;\n  const isAllowed = isInitialized && !isPanning && !disabled && target;\n\n  if (!isAllowed) return false;\n  // Event ctrlKey detects if touchpad action is executing wheel or pinch gesture\n  if (wheelDisabled && !event.ctrlKey) return false;\n  if (touchPadDisabled && event.ctrlKey) return false;\n\n  const isExcluded = isExcludedNode(target, excluded);\n\n  if (isExcluded) return false;\n\n  return true;\n};\n\nexport function getDelta(\n  event: WheelEvent,\n  customDelta?: number | null,\n): number {\n  const deltaY = event ? (event.deltaY < 0 ? 1 : -1) : 0;\n  const delta = checkIsNumber(customDelta, deltaY);\n  return delta;\n}\n\nexport function getMousePosition(\n  event: WheelEvent | MouseEvent | TouchEvent,\n  contentComponent: HTMLDivElement,\n  scale: number,\n): PositionType {\n  const contentRect = contentComponent.getBoundingClientRect();\n\n  let mouseX = 0;\n  let mouseY = 0;\n\n  if (\"clientX\" in event) {\n    // mouse position x, y over wrapper component\n    mouseX = (event.clientX - contentRect.left) / scale;\n    mouseY = (event.clientY - contentRect.top) / scale;\n  } else {\n    const touch = event.touches[0];\n    mouseX = (touch.clientX - contentRect.left) / scale;\n    mouseY = (touch.clientY - contentRect.top) / scale;\n  }\n\n  if (isNaN(mouseX) || isNaN(mouseY))\n    console.error(\"No mouse or touch offset found\");\n\n  return {\n    x: mouseX,\n    y: mouseY,\n  };\n}\n\nexport const handleCalculateWheelZoom = (\n  contextInstance: ReactZoomPanPinchContext,\n  delta: number,\n  step: number,\n  disable: boolean,\n  getTarget?: boolean,\n): number => {\n  const { scale } = contextInstance.transformState;\n  const { wrapperComponent, setup } = contextInstance;\n  const { maxScale, minScale, zoomAnimation, disablePadding } = setup;\n  const { size, disabled } = zoomAnimation;\n\n  if (!wrapperComponent) {\n    throw new Error(\"Wrapper is not mounted\");\n  }\n\n  const targetScale = scale + delta * (scale - scale * step) * step;\n\n  if (getTarget) return targetScale;\n  const paddingEnabled = disable ? false : !disabled;\n  const newScale = checkZoomBounds(\n    roundNumber(targetScale, 3),\n    minScale,\n    maxScale,\n    size,\n    paddingEnabled && !disablePadding,\n  );\n  return newScale;\n};\n\nexport const handleWheelZoomStop = (\n  contextInstance: ReactZoomPanPinchContext,\n  event: WheelEvent,\n): boolean => {\n  const { previousWheelEvent } = contextInstance;\n  const { scale } = contextInstance.transformState;\n  const { maxScale, minScale } = contextInstance.setup;\n\n  if (!previousWheelEvent) return false;\n  if (scale < maxScale || scale > minScale) return true;\n  if (Math.sign(previousWheelEvent.deltaY) !== Math.sign(event.deltaY))\n    return true;\n  if (previousWheelEvent.deltaY > 0 && previousWheelEvent.deltaY < event.deltaY)\n    return true;\n  if (previousWheelEvent.deltaY < 0 && previousWheelEvent.deltaY > event.deltaY)\n    return true;\n  if (Math.sign(previousWheelEvent.deltaY) !== Math.sign(event.deltaY))\n    return true;\n  return false;\n};\n","import { PositionType, ReactZoomPanPinchContext } from \"../../models\";\nimport { isExcludedNode, roundNumber } from \"../../utils\";\nimport { checkZoomBounds } from \"../zoom/zoom.utils\";\n\nexport const isPinchStartAllowed = (\n  contextInstance: ReactZoomPanPinchContext,\n  event: TouchEvent,\n): boolean => {\n  const { disabled, excluded } = contextInstance.setup.pinch;\n  const { isInitialized } = contextInstance;\n\n  const target = event.target as HTMLElement;\n  const isAllowed = isInitialized && !disabled && target;\n\n  if (!isAllowed) return false;\n\n  const isExcluded = isExcludedNode(target, excluded);\n\n  if (isExcluded) return false;\n\n  return true;\n};\n\nexport const isPinchAllowed = (\n  contextInstance: ReactZoomPanPinchContext,\n): boolean => {\n  const { disabled } = contextInstance.setup.pinch;\n  const { isInitialized, pinchStartDistance } = contextInstance;\n\n  const isAllowed = isInitialized && !disabled && pinchStartDistance;\n\n  if (!isAllowed) return false;\n\n  return true;\n};\n\nexport const calculateTouchMidPoint = (\n  event: TouchEvent,\n  scale: number,\n  contentComponent: HTMLDivElement,\n): PositionType => {\n  const contentRect = contentComponent.getBoundingClientRect();\n  const { touches } = event;\n  const firstPointX = roundNumber(touches[0].clientX - contentRect.left, 5);\n  const firstPointY = roundNumber(touches[0].clientY - contentRect.top, 5);\n  const secondPointX = roundNumber(touches[1].clientX - contentRect.left, 5);\n  const secondPointY = roundNumber(touches[1].clientY - contentRect.top, 5);\n\n  return {\n    x: (firstPointX + secondPointX) / 2 / scale,\n    y: (firstPointY + secondPointY) / 2 / scale,\n  };\n};\n\nexport const getTouchDistance = (event: TouchEvent): number => {\n  return Math.sqrt(\n    Math.pow(event.touches[0].pageX - event.touches[1].pageX, 2) +\n      Math.pow(event.touches[0].pageY - event.touches[1].pageY, 2),\n  );\n};\n\nexport const calculatePinchZoom = (\n  contextInstance: ReactZoomPanPinchContext,\n  currentDistance: number,\n): number => {\n  const { pinchStartScale, pinchStartDistance, setup } = contextInstance;\n  const { maxScale, minScale, zoomAnimation, disablePadding } = setup;\n  const { size, disabled } = zoomAnimation;\n\n  if (!pinchStartScale || pinchStartDistance === null || !currentDistance) {\n    throw new Error(\"Pinch touches distance was not provided\");\n  }\n\n  if (currentDistance < 0) {\n    return contextInstance.transformState.scale;\n  }\n\n  const touchProportion = currentDistance / pinchStartDistance;\n  const scaleDifference = touchProportion * pinchStartScale;\n\n  return checkZoomBounds(\n    roundNumber(scaleDifference, 2),\n    minScale,\n    maxScale,\n    size,\n    !disabled && !disablePadding,\n  );\n};\n","import { ReactZoomPanPinchContext } from \"../../models\";\nimport { handleCallback } from \"../../utils/callback.utils\";\nimport { getContext } from \"../../utils/context.utils\";\nimport { cancelTimeout } from \"../../utils/helpers.utils\";\nimport { handleCancelAnimation } from \"../animations/animations.utils\";\nimport { handleCalculateBounds } from \"../bounds/bounds.utils\";\nimport {\n  getDelta,\n  handleCalculateWheelZoom,\n  handleWheelZoomStop,\n  getMousePosition,\n} from \"./wheel.utils\";\nimport { handleAlignToScaleBounds } from \"../zoom/zoom.logic\";\nimport { handleCalculateZoomPositions } from \"../zoom/zoom.utils\";\n\nconst wheelStopEventTime = 160;\nconst wheelAnimationTime = 100;\n\nexport const handleWheelStart = (\n  contextInstance: ReactZoomPanPinchContext,\n  event: WheelEvent,\n): void => {\n  const { onWheelStart, onZoomStart } = contextInstance.props;\n\n  if (!contextInstance.wheelStopEventTimer) {\n    handleCancelAnimation(contextInstance);\n    handleCallback(getContext(contextInstance), event, onWheelStart);\n    handleCallback(getContext(contextInstance), event, onZoomStart);\n  }\n};\n\nexport const handleWheelZoom = (\n  contextInstance: ReactZoomPanPinchContext,\n  event: WheelEvent,\n): void => {\n  const { onWheel, onZoom } = contextInstance.props;\n\n  const { contentComponent, setup, transformState } = contextInstance;\n  const { scale } = transformState;\n  const {\n    limitToBounds,\n    centerZoomedOut,\n    zoomAnimation,\n    wheel,\n    disablePadding,\n  } = setup;\n  const { size, disabled } = zoomAnimation;\n  const { step } = wheel;\n\n  if (!contentComponent) {\n    throw new Error(\"Component not mounted\");\n  }\n\n  event.preventDefault();\n  event.stopPropagation();\n\n  const delta = getDelta(event, null);\n  const newScale = handleCalculateWheelZoom(\n    contextInstance,\n    delta,\n    step,\n    !event.ctrlKey,\n  );\n\n  // if scale not change\n  if (scale === newScale) return;\n\n  const bounds = handleCalculateBounds(contextInstance, newScale);\n\n  const mousePosition = getMousePosition(event, contentComponent, scale);\n\n  const isPaddingDisabled =\n    disabled || size === 0 || centerZoomedOut || disablePadding;\n  const isLimitedToBounds = limitToBounds && isPaddingDisabled;\n\n  const { x, y } = handleCalculateZoomPositions(\n    contextInstance,\n    mousePosition.x,\n    mousePosition.y,\n    newScale,\n    bounds,\n    isLimitedToBounds,\n  );\n\n  contextInstance.previousWheelEvent = event;\n\n  contextInstance.setTransformState(newScale, x, y);\n\n  handleCallback(getContext(contextInstance), event, onWheel);\n  handleCallback(getContext(contextInstance), event, onZoom);\n};\n\nexport const handleWheelStop = (\n  contextInstance: ReactZoomPanPinchContext,\n  event: WheelEvent,\n): void => {\n  const { onWheelStop, onZoomStop } = contextInstance.props;\n\n  // fire animation\n  cancelTimeout(contextInstance.wheelAnimationTimer);\n  contextInstance.wheelAnimationTimer = setTimeout(() => {\n    if (!contextInstance.mounted) return;\n    handleAlignToScaleBounds(contextInstance, event.x, event.y);\n    contextInstance.wheelAnimationTimer = null;\n  }, wheelAnimationTime);\n\n  // Wheel stop event\n  const hasStoppedZooming = handleWheelZoomStop(contextInstance, event);\n  if (hasStoppedZooming) {\n    cancelTimeout(contextInstance.wheelStopEventTimer);\n    contextInstance.wheelStopEventTimer = setTimeout(() => {\n      if (!contextInstance.mounted) return;\n      contextInstance.wheelStopEventTimer = null;\n      handleCallback(getContext(contextInstance), event, onWheelStop);\n      handleCallback(getContext(contextInstance), event, onZoomStop);\n    }, wheelStopEventTime);\n  }\n};\n","import { ReactZoomPanPinchContext } from \"../../models\";\nimport { handleCancelAnimation } from \"../animations/animations.utils\";\nimport { handleAlignToScaleBounds } from \"../zoom/zoom.logic\";\nimport {\n  calculatePinchZoom,\n  calculateTouchMidPoint,\n  getTouchDistance,\n} from \"./pinch.utils\";\nimport { handleCalculateBounds } from \"../bounds/bounds.utils\";\nimport { handleCalculateZoomPositions } from \"../zoom/zoom.utils\";\n\nexport const handlePinchStart = (\n  contextInstance: ReactZoomPanPinchContext,\n  event: TouchEvent,\n): void => {\n  const distance = getTouchDistance(event);\n\n  contextInstance.pinchStartDistance = distance;\n  contextInstance.lastDistance = distance;\n  contextInstance.pinchStartScale = contextInstance.transformState.scale;\n  contextInstance.isPanning = false;\n\n  handleCancelAnimation(contextInstance);\n};\n\nexport const handlePinchZoom = (\n  contextInstance: ReactZoomPanPinchContext,\n  event: TouchEvent,\n): void => {\n  const { contentComponent, pinchStartDistance } = contextInstance;\n  const { scale } = contextInstance.transformState;\n  const {\n    limitToBounds,\n    centerZoomedOut,\n    zoomAnimation,\n  } = contextInstance.setup;\n  const { disabled, size } = zoomAnimation;\n\n  // if one finger starts from outside of wrapper\n  if (pinchStartDistance === null || !contentComponent) return;\n\n  const midPoint = calculateTouchMidPoint(event, scale, contentComponent);\n\n  // if touches goes off of the wrapper element\n  if (!isFinite(midPoint.x) || !isFinite(midPoint.y)) return;\n\n  const currentDistance = getTouchDistance(event);\n  const newScale = calculatePinchZoom(contextInstance, currentDistance);\n\n  if (newScale === scale) return;\n\n  const bounds = handleCalculateBounds(contextInstance, newScale);\n\n  const isPaddingDisabled = disabled || size === 0 || centerZoomedOut;\n  const isLimitedToBounds = limitToBounds && isPaddingDisabled;\n\n  const { x, y } = handleCalculateZoomPositions(\n    contextInstance,\n    midPoint.x,\n    midPoint.y,\n    newScale,\n    bounds,\n    isLimitedToBounds,\n  );\n\n  contextInstance.pinchMidpoint = midPoint;\n  contextInstance.lastDistance = currentDistance;\n\n  contextInstance.setTransformState(newScale, x, y);\n};\n\nexport const handlePinchStop = (\n  contextInstance: ReactZoomPanPinchContext,\n): void => {\n  const { pinchMidpoint } = contextInstance;\n\n  contextInstance.velocity = null;\n  contextInstance.lastDistance = null;\n  contextInstance.pinchMidpoint = null;\n  contextInstance.pinchStartScale = null;\n  contextInstance.pinchStartDistance = null;\n  handleAlignToScaleBounds(contextInstance, pinchMidpoint?.x, pinchMidpoint?.y);\n};\n","import { ReactZoomPanPinchContext } from \"../../models\";\n\nimport { animate } from \"../animations/animations.utils\";\nimport { getMousePosition } from \"core/wheel/wheel.utils\";\nimport { handleZoomToPoint } from \"core/zoom/zoom.logic\";\nimport { isExcludedNode } from \"utils\";\nimport {\n  handleCalculateButtonZoom,\n  resetTransformations,\n} from \"core/handlers/handlers.utils\";\n\nexport function handleDoubleClick(\n  contextInstance: ReactZoomPanPinchContext,\n  event: MouseEvent | TouchEvent,\n): void {\n  const {\n    disabled,\n    mode,\n    step,\n    animationTime,\n    animationType,\n  } = contextInstance.setup.doubleClick;\n\n  if (disabled) return;\n\n  if (mode === \"reset\") {\n    return resetTransformations(contextInstance, animationTime, animationType);\n  }\n\n  const { scale } = contextInstance.transformState;\n  const { contentComponent } = contextInstance;\n\n  if (!contentComponent) return console.error(\"No ContentComponent found\");\n\n  const delta = mode === \"zoomOut\" ? -1 : 1;\n\n  const newScale = handleCalculateButtonZoom(contextInstance, delta, step);\n  const mousePosition = getMousePosition(event, contentComponent, scale);\n  const targetState = handleZoomToPoint(\n    contextInstance,\n    newScale,\n    mousePosition.x,\n    mousePosition.y,\n  );\n\n  if (!targetState) {\n    return console.error(\n      \"Error during zoom event. New transformation state was not calculated.\",\n    );\n  }\n\n  animate(contextInstance, targetState, animationTime, animationType);\n}\n\nexport const isDoubleClickAllowed = (\n  contextInstance: ReactZoomPanPinchContext,\n  event: MouseEvent | TouchEvent,\n): boolean => {\n  const { isInitialized, setup, wrapperComponent } = contextInstance;\n  const { disabled, excluded } = setup.doubleClick;\n\n  const target = event.target as HTMLElement;\n  const isWrapperChild = wrapperComponent?.contains(target);\n  const isAllowed = isInitialized && target && isWrapperChild && !disabled;\n\n  if (!isAllowed) return false;\n\n  const isExcluded = isExcludedNode(target, excluded);\n\n  if (isExcluded) return false;\n\n  if (!isAllowed) return false;\n\n  return true;\n};\n","import React, { Component } from \"react\";\n\nimport {\n  BoundsType,\n  LibrarySetup,\n  PositionType,\n  VelocityType,\n  AnimationType,\n  ReactZoomPanPinchRef,\n  ReactZoomPanPinchProps,\n  ReactZoomPanPinchState,\n} from \"../models\";\n\nimport {\n  getContext,\n  createSetup,\n  createState,\n  handleCallback,\n  getTransformStyles,\n  makePassiveEventOption,\n  getCenterPosition,\n} from \"../utils\";\n\nimport { contextInitialState } from \"../constants/state.constants\";\n\nimport { handleCancelAnimation } from \"../core/animations/animations.utils\";\nimport { isWheelAllowed } from \"../core/wheel/wheel.utils\";\nimport { isPinchAllowed, isPinchStartAllowed } from \"../core/pinch/pinch.utils\";\nimport { handleCalculateBounds } from \"../core/bounds/bounds.utils\";\n\nimport {\n  handleWheelStart,\n  handleWheelZoom,\n  handleWheelStop,\n} from \"../core/wheel/wheel.logic\";\nimport {\n  isPanningAllowed,\n  isPanningStartAllowed,\n} from \"../core/pan/panning.utils\";\nimport {\n  handlePanning,\n  handlePanningEnd,\n  handlePanningStart,\n} from \"../core/pan/panning.logic\";\nimport {\n  handlePinchStart,\n  handlePinchStop,\n  handlePinchZoom,\n} from \"../core/pinch/pinch.logic\";\nimport {\n  handleDoubleClick,\n  isDoubleClickAllowed,\n} from \"../core/double-click/double-click.logic\";\n\ntype StartCoordsType = { x: number; y: number } | null;\n\nconst Context = React.createContext(contextInitialState);\n\nclass TransformContext extends Component<\n  Omit<ReactZoomPanPinchProps, \"ref\"> & {\n    setRef: (context: ReactZoomPanPinchRef) => void;\n  }\n> {\n  public mounted = true;\n\n  public transformState: ReactZoomPanPinchState = createState(this.props);\n\n  public setup: LibrarySetup = createSetup(this.props);\n\n  // Components\n  public wrapperComponent: HTMLDivElement | null = null;\n  public contentComponent: HTMLDivElement | null = null;\n  // Initialization\n  public isInitialized = false;\n  public bounds: BoundsType | null = null;\n  // wheel helpers\n  public previousWheelEvent: WheelEvent | null = null;\n  public wheelStopEventTimer: ReturnType<typeof setTimeout> | null = null;\n  public wheelAnimationTimer: ReturnType<typeof setTimeout> | null = null;\n  // panning helpers\n  public isPanning = false;\n  public startCoords: StartCoordsType = null;\n  public lastTouch: number | null = null;\n  // pinch helpers\n  public distance: null | number = null;\n  public lastDistance: null | number = null;\n  public pinchStartDistance: null | number = null;\n  public pinchStartScale: null | number = null;\n  public pinchMidpoint: null | PositionType = null;\n  // velocity helpers\n  public velocity: VelocityType | null = null;\n  public velocityTime: number | null = null;\n  public lastMousePosition: PositionType | null = null;\n  // animations helpers\n  public animate = false;\n  public animation: AnimationType | null = null;\n  public maxBounds: BoundsType | null = null;\n  // key press\n  public pressedKeys: { [key: string]: boolean } = {};\n\n  componentDidMount(): void {\n    this.initializeWindowEvents();\n  }\n\n  componentWillUnmount(): void {\n    this.cleanupWindowEvents();\n  }\n\n  componentDidUpdate(oldProps: ReactZoomPanPinchProps): void {\n    if (oldProps !== this.props) {\n      handleCalculateBounds(this, this.transformState.scale);\n      this.setup = createSetup(this.props);\n    }\n  }\n\n  initializeWindowEvents = (): void => {\n    const passive = makePassiveEventOption();\n    const currentDocument = this.wrapperComponent?.ownerDocument;\n    const currentWindow = currentDocument?.defaultView;\n    // Panning on window to allow panning when mouse is out of component wrapper\n    currentWindow?.addEventListener(\"mousedown\", this.onPanningStart, passive);\n    currentWindow?.addEventListener(\"mousemove\", this.onPanning, passive);\n    currentWindow?.addEventListener(\"mouseup\", this.onPanningStop, passive);\n    currentDocument?.addEventListener(\"mouseleave\", this.clearPanning, passive);\n    currentWindow?.addEventListener(\"keyup\", this.setKeyUnPressed, passive);\n    currentWindow?.addEventListener(\"keydown\", this.setKeyPressed, passive);\n\n    this.handleRef();\n  }\n\n  cleanupWindowEvents = (): void => {\n    const passive = makePassiveEventOption();\n    const currentDocument = this.wrapperComponent?.ownerDocument;\n    const currentWindow = currentDocument?.defaultView;\n    currentWindow?.removeEventListener(\"mousedown\", this.onPanningStart, passive);\n    currentWindow?.removeEventListener(\"mousemove\", this.onPanning, passive);\n    currentWindow?.removeEventListener(\"mouseup\", this.onPanningStop, passive);\n    currentDocument?.removeEventListener(\"mouseleave\", this.clearPanning, passive);\n    currentWindow?.removeEventListener(\"keyup\", this.setKeyUnPressed, passive);\n    currentWindow?.removeEventListener(\"keydown\", this.setKeyPressed, passive);\n    document.removeEventListener(\"mouseleave\", this.clearPanning, passive);\n\n    handleCancelAnimation(this);\n  }\n\n  handleInitializeWrapperEvents = (wrapper: HTMLDivElement): void => {\n    // Zooming events on wrapper\n    const passive = makePassiveEventOption();\n\n    wrapper.addEventListener(\"wheel\", this.onWheelZoom, passive);\n    wrapper.addEventListener(\"dblclick\", this.onDoubleClick, passive);\n    wrapper.addEventListener(\"touchstart\", this.onTouchPanningStart, passive);\n    wrapper.addEventListener(\"touchmove\", this.onTouchPanning, passive);\n    wrapper.addEventListener(\"touchend\", this.onTouchPanningStop, passive);\n  };\n\n  handleInitialize = (): void => {\n    const { centerOnInit } = this.setup;\n\n    this.applyTransformation();\n    this.forceUpdate();\n\n    if (centerOnInit) {\n      // this has to be redone once the right solution is found\n      // problem is - we need to execute it after mounted component specify it's height / width, images are fetched async so it's tricky\n      setTimeout(() => {\n        if (this.mounted) {\n          this.setCenter();\n        }\n      }, 50);\n      setTimeout(() => {\n        if (this.mounted) {\n          this.setCenter();\n        }\n      }, 100);\n      setTimeout(() => {\n        if (this.mounted) {\n          this.setCenter();\n        }\n      }, 200);\n    }\n  };\n\n  //////////\n  // Zoom\n  //////////\n\n  onWheelZoom = (event: WheelEvent): void => {\n    const { disabled } = this.setup;\n    if (disabled) return;\n\n    const isAllowed = isWheelAllowed(this, event);\n    if (!isAllowed) return;\n\n    const keysPressed = this.isPressingKeys(this.setup.wheel.activationKeys);\n    if (!keysPressed) return;\n\n    handleWheelStart(this, event);\n    handleWheelZoom(this, event);\n    handleWheelStop(this, event);\n  };\n\n  //////////\n  // Pan\n  //////////\n\n  onPanningStart = (event: MouseEvent): void => {\n    const { disabled } = this.setup;\n    const { onPanningStart } = this.props;\n    if (disabled) return;\n\n    const isAllowed = isPanningStartAllowed(this, event);\n    if (!isAllowed) return;\n\n    const keysPressed = this.isPressingKeys(this.setup.panning.activationKeys);\n    if (!keysPressed) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    handleCancelAnimation(this);\n    handlePanningStart(this, event);\n    handleCallback(getContext(this), event, onPanningStart);\n  };\n\n  onPanning = (event: MouseEvent): void => {\n    const { disabled } = this.setup;\n    const { onPanning } = this.props;\n\n    if (disabled) return;\n\n    const isAllowed = isPanningAllowed(this);\n    if (!isAllowed) return;\n\n    const keysPressed = this.isPressingKeys(this.setup.panning.activationKeys);\n    if (!keysPressed) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    handlePanning(this, event.clientX, event.clientY);\n    handleCallback(getContext(this), event, onPanning);\n  };\n\n  onPanningStop = (event: MouseEvent | TouchEvent): void => {\n    const { onPanningStop } = this.props;\n\n    if (this.isPanning) {\n      handlePanningEnd(this);\n      handleCallback(getContext(this), event, onPanningStop);\n    }\n  };\n\n  //////////\n  // Pinch\n  //////////\n\n  onPinchStart = (event: TouchEvent): void => {\n    const { disabled } = this.setup;\n    const { onPinchingStart, onZoomStart } = this.props;\n\n    if (disabled) return;\n\n    const isAllowed = isPinchStartAllowed(this, event);\n    if (!isAllowed) return;\n\n    handlePinchStart(this, event);\n    handleCancelAnimation(this);\n    handleCallback(getContext(this), event, onPinchingStart);\n    handleCallback(getContext(this), event, onZoomStart);\n  };\n\n  onPinch = (event: TouchEvent): void => {\n    const { disabled } = this.setup;\n    const { onPinching, onZoom } = this.props;\n\n    if (disabled) return;\n\n    const isAllowed = isPinchAllowed(this);\n    if (!isAllowed) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    handlePinchZoom(this, event);\n    handleCallback(getContext(this), event, onPinching);\n    handleCallback(getContext(this), event, onZoom);\n  };\n\n  onPinchStop = (event: TouchEvent): void => {\n    const { onPinchingStop, onZoomStop } = this.props;\n\n    if (this.pinchStartScale) {\n      handlePinchStop(this);\n      handleCallback(getContext(this), event, onPinchingStop);\n      handleCallback(getContext(this), event, onZoomStop);\n    }\n  };\n\n  //////////\n  // Touch\n  //////////\n\n  onTouchPanningStart = (event: TouchEvent): void => {\n    const { disabled } = this.setup;\n    const { onPanningStart } = this.props;\n\n    if (disabled) return;\n\n    const isAllowed = isPanningStartAllowed(this, event);\n\n    if (!isAllowed) return;\n\n    const isDoubleTap = this.lastTouch && +new Date() - this.lastTouch < 200;\n\n    if (isDoubleTap && event.touches.length === 1) {\n      this.onDoubleClick(event);\n    } else {\n      this.lastTouch = +new Date();\n\n      handleCancelAnimation(this);\n\n      const { touches } = event;\n\n      const isPanningAction = touches.length === 1;\n      const isPinchAction = touches.length === 2;\n\n      if (isPanningAction) {\n        handleCancelAnimation(this);\n        handlePanningStart(this, event);\n        handleCallback(getContext(this), event, onPanningStart);\n      }\n      if (isPinchAction) {\n        this.onPinchStart(event);\n      }\n    }\n  };\n\n  onTouchPanning = (event: TouchEvent): void => {\n    const { disabled } = this.setup;\n    const { onPanning } = this.props;\n\n    if (this.isPanning && event.touches.length === 1) {\n      if (disabled) return;\n\n      const isAllowed = isPanningAllowed(this);\n      if (!isAllowed) return;\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      const touch = event.touches[0];\n      handlePanning(this, touch.clientX, touch.clientY);\n      handleCallback(getContext(this), event, onPanning);\n    } else if (event.touches.length > 1) {\n      this.onPinch(event);\n    }\n  };\n\n  onTouchPanningStop = (event: TouchEvent): void => {\n    this.onPanningStop(event);\n    this.onPinchStop(event);\n  };\n\n  //////////\n  // Double Click\n  //////////\n\n  onDoubleClick = (event: MouseEvent | TouchEvent): void => {\n    const { disabled } = this.setup;\n    if (disabled) return;\n\n    const isAllowed = isDoubleClickAllowed(this, event);\n    if (!isAllowed) return;\n\n    handleDoubleClick(this, event);\n  };\n\n  //////////\n  // Helpers\n  //////////\n\n  clearPanning = (event: MouseEvent): void => {\n    if (this.isPanning) {\n      this.onPanningStop(event);\n    }\n  };\n\n  setKeyPressed = (e: KeyboardEvent): void => {\n    this.pressedKeys[e.key] = true;\n  };\n\n  setKeyUnPressed = (e: KeyboardEvent): void => {\n    this.pressedKeys[e.key] = false;\n  };\n\n  isPressingKeys = (keys: string[]): boolean => {\n    if (!keys.length) {\n      return true;\n    }\n    return Boolean(keys.find((key) => this.pressedKeys[key]));\n  };\n\n  setComponents = (\n    wrapperComponent: HTMLDivElement,\n    contentComponent: HTMLDivElement,\n  ): void => {\n    this.cleanupWindowEvents();\n    this.wrapperComponent = wrapperComponent;\n    this.contentComponent = contentComponent;\n    handleCalculateBounds(this, this.transformState.scale);\n    this.handleInitializeWrapperEvents(wrapperComponent);\n    this.initializeWindowEvents();\n    this.handleInitialize();\n    this.handleRef();\n    this.isInitialized = true;\n    handleCallback(getContext(this), undefined, this.props.onInit);\n  };\n\n  setTransformState = (\n    scale: number,\n    positionX: number,\n    positionY: number,\n  ): void => {\n    const { onTransformed } = this.props;\n\n    if (!isNaN(scale) && !isNaN(positionX) && !isNaN(positionY)) {\n      if (scale !== this.transformState.scale) {\n        this.transformState.previousScale = this.transformState.scale;\n        this.transformState.scale = scale;\n      }\n      this.transformState.positionX = positionX;\n      this.transformState.positionY = positionY;\n\n      handleCallback(\n        getContext(this),\n        { scale, positionX, positionY },\n        onTransformed,\n      );\n      this.applyTransformation();\n    } else {\n      console.error(\"Detected NaN set state values\");\n    }\n  };\n\n  setCenter = (): void => {\n    if (this.wrapperComponent && this.contentComponent) {\n      const targetState = getCenterPosition(\n        this.transformState.scale,\n        this.wrapperComponent,\n        this.contentComponent,\n      );\n      this.setTransformState(\n        targetState.scale,\n        targetState.positionX,\n        targetState.positionY,\n      );\n    }\n  };\n\n  applyTransformation = (): void => {\n    if (!this.mounted || !this.contentComponent) return;\n    const { scale, positionX, positionY } = this.transformState;\n    const transform = getTransformStyles(positionX, positionY, scale);\n    this.contentComponent.style.transform = transform;\n\n    this.handleRef();\n  };\n\n  handleRef = (): void => {\n    this.props.setRef(getContext(this));\n  };\n\n  render(): JSX.Element {\n    const value = getContext(this);\n    const { children } = this.props;\n    const content = typeof children === \"function\" ? children(value) : children;\n\n    return (\n      <Context.Provider\n        value={{\n          ...this.transformState,\n          setComponents: this.setComponents,\n          contextInstance: this,\n        }}\n      >\n        {content}\n      </Context.Provider>\n    );\n  }\n}\n\nexport { Context, TransformContext };\n","import React, { useImperativeHandle, useState } from \"react\";\nimport { ReactZoomPanPinchProps, ReactZoomPanPinchRef } from \"../models\";\nimport { TransformContext } from \"./transform-context\";\n\nexport const TransformWrapper = React.forwardRef(\n  (\n    props: Omit<ReactZoomPanPinchProps, \"ref\">,\n    ref: React.Ref<ReactZoomPanPinchRef>,\n  ) => {\n    const [innerRef, setRef] = useState<ReactZoomPanPinchRef | null>(null);\n\n    useImperativeHandle(ref, () => innerRef as any, [innerRef]);\n\n    return <TransformContext {...props} setRef={setRef as any} />;\n  },\n);\n\nexport default TransformWrapper;\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { useContext, useEffect, useRef } from \"react\";\n\nimport { Context } from \"./transform-context\";\n\nimport styles from \"./transform-component.module.css\";\n\ntype Props = {\n  children: React.ReactNode;\n  wrapperClass?: string;\n  contentClass?: string;\n  wrapperStyle?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n};\n\nexport const TransformComponent: React.FC<Props> = ({\n  children,\n  wrapperClass = \"\",\n  contentClass = \"\",\n  wrapperStyle,\n  contentStyle,\n}: Props) => {\n  const { setComponents } = useContext(Context);\n\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n  const contentRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    const wrapper = wrapperRef.current;\n    const content = contentRef.current;\n    if (wrapper !== null && content !== null && setComponents) {\n      setComponents(wrapper, content);\n    }\n  }, []);\n\n  return (\n    <div\n      ref={wrapperRef}\n      className={`react-transform-wrapper ${styles.wrapper} ${wrapperClass}`}\n      style={wrapperStyle}\n    >\n      <div\n        ref={contentRef}\n        className={`react-transform-component ${styles.content} ${contentClass}`}\n        style={contentStyle}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default TransformComponent;\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__assign","assign","t","s","i","n","arguments","length","apply","this","__spreadArray","to","from","pack","ar","l","slice","concat","roundNumber","num","decimal","Number","toFixed","handleCallback","context","event","callback","animations","easeOut","Math","cos","PI","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","handleCancelAnimationFrame","animation","cancelAnimationFrame","handleCancelAnimation","contextInstance","mounted","animate","velocity","handleSetupAnimation","animationName","animationTime","startTime","Date","getTime","frameTime","step","animationType","requestAnimationFrame","targetState","isValid","scale","positionX","positionY","isNaN","isValidTargetState","setTransformState","transformState","scaleDiff","positionXDiff","positionYDiff","calculateBounds","newScale","wrapperComponent","contentComponent","centerZoomedOut","setup","Error","wrapperWidth","offsetWidth","wrapperHeight","offsetHeight","newContentWidth","newContentHeight","newDiffWidth","newDiffHeight","getComponentsSizes","bounds","diffWidth","diffHeight","scaleWidthFactor","scaleHeightFactor","minPositionX","maxPositionX","minPositionY","maxPositionY","getBounds","Boolean","handleCalculateBounds","getMouseBoundedPosition","limitToBounds","paddingValueX","paddingValueY","paddingX","paddingY","x","boundLimiter","y","value","minBound","maxBound","isActive","handleCalculateZoomPositions","mouseX","mouseY","scaleDifference","console","error","checkZoomBounds","zoom","minScale","maxScale","zoomPadding","enablePadding","minScaleWithPadding","isPanningStartAllowed","excluded","panning","isInitialized","target","isWrapperChild","contains","isExcludedNode","isPanningAllowed","isPanning","disabled","getPaddingValue","size","disablePadding","getVelocityPosition","newPosition","startPosition","currentPosition","isLocked","minPosition","maxPosition","minTarget","maxTarget","calculatedPosition","handleCalculateVelocity","position","isAllowed","velocityAnimation","isVelocityCalculationAllowed","lastMousePosition","velocityTime","equalToMove","now","sizeMultiplier","min","window","innerWidth","getSizeMultiplier","distanceX","distanceY","velocityX","velocityY","interval","speed","sqrt","total","handlePanningStart","undefined","TouchEvent","touches","clientX","clientY","startCoords","handleTouchPanningSetup","handlePanningSetup","handlePanning","alignmentAnimation","sizeX","sizeY","lockAxisX","lockAxisY","getPanningClientPosition","newPositionX","newPositionY","handleNewPosition","handlePanningEnd","velocityDisabled","wrapperRect","getBoundingClientRect","contentRect","width","height","contentWidth","contentHeight","isZoomed","isVelocityAllowed","zoomAnimation","alignAnimationTime","moveAnimationTime","sensitivity","getVelocityMoveTime","finalAnimationTime","max","maxTargetX","minTargetX","maxTargetY","minTargetY","startState","animationProgress","alignStep","alignAnimation","customStep","currentPositionX","currentPositionY","handleVelocityPanning","handleAlignToBounds","xChanged","yChanged","handlePanToBounds","handleAlignToScaleBounds","mousePositionX","mousePositionY","isDisabled","handleZoomToPoint","initialState","previousScale","contextInitialState","setComponents","initialSetup","centerOnInit","wheel","wheelDisabled","touchPadDisabled","activationKeys","pinch","doubleClick","mode","velocityAlignmentTime","createState","props","initialScale","initialPositionX","initialPositionY","createSetup","newSetup","keys","forEach","key","validValue","dataType","toString","isObject","isArray","handleCalculateButtonZoom","delta","targetScale","exp","handleZoomToViewCenter","resetTransformations","initialTransformation","newBounds","boundedPositions","newState","calculateZoomToNode","node","customZoom","nodeRect","element","el","offsetLeft","offsetTop","offsetParent","scrollX","scrollY","getOffset","nodeLeft","nodeTop","nodeWidth","nodeHeight","scaleX","scaleY","offsetX","offsetY","left","top","zoomIn","zoomOut","setTransform","resetTransform","centerView","getCenterPosition","zoomToElement","document","getElementById","isValidZoomNode","getContext","instance","state","makePassiveEventOption","passive","err","targetTagName","tagName","toUpperCase","find","tag","className","classList","cancelTimeout","timeout","clearTimeout","getTransformStyles","isWheelAllowed","ctrlKey","getMousePosition","touch","isPinchStartAllowed","isPinchAllowed","pinchStartDistance","getTouchDistance","pow","pageX","pageY","handleWheelStart","onWheelStart","onZoomStart","wheelStopEventTimer","handleWheelZoom","onWheel","onZoom","preventDefault","stopPropagation","customDelta","defaultValue","deltaY","getDelta","disable","getTarget","paddingEnabled","handleCalculateWheelZoom","mousePosition","isLimitedToBounds","previousWheelEvent","handleWheelStop","onWheelStop","onZoomStop","wheelAnimationTimer","setTimeout","hasStoppedZooming","sign","handleWheelZoomStop","handlePinchStart","distance","lastDistance","pinchStartScale","handlePinchZoom","midPoint","firstPointX","firstPointY","calculateTouchMidPoint","isFinite","currentDistance","calculatePinchZoom","pinchMidpoint","handlePinchStop","handleDoubleClick","isDoubleClickAllowed","Context","React","_this","currentDocument","ownerDocument","currentWindow","defaultView","addEventListener","onPanningStart","onPanning","onPanningStop","clearPanning","setKeyUnPressed","setKeyPressed","handleRef","removeEventListener","wrapper","onWheelZoom","onDoubleClick","onTouchPanningStart","onTouchPanning","onTouchPanningStop","applyTransformation","forceUpdate","setCenter","isPressingKeys","onPinchingStart","onPinching","onPinchingStop","lastTouch","isPanningAction","isPinchAction","onPinchStart","onPinch","onPinchStop","e","pressedKeys","cleanupWindowEvents","handleInitializeWrapperEvents","initializeWindowEvents","handleInitialize","onInit","onTransformed","transform","style","setRef","TypeError","String","__","constructor","create","__extends","TransformContext","oldProps","children","content","Provider","Component","TransformWrapper","ref","useState","innerRef","useImperativeHandle","css","insertAt","head","getElementsByTagName","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","TransformComponent","_a","_b","wrapperClass","_c","contentClass","wrapperStyle","contentStyle","useContext","wrapperRef","useRef","contentRef","useEffect","current","styles"],"sourceRoot":""}